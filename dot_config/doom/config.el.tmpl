; -*- mode: emacs-lisp; lexical-binding: t; -*-

(require 'tmux-pane)

(evil-lion-mode)

(setq user-full-name "João Fernandes"
      user-email-address "joaofnds@joaofnds.com"

      initial-frame-alist '((width . 120) (height . 50))

      ;; doom
      doom-theme 'doom-solarized-dark
      doom-themes-enable-bold t      ; if nil, bold is universally disabled
      doom-themes-enable-italic t    ; if nil, italics is universally disabled
      {{- if eq .chezmoi.os "darwin"}}
      doom-font (font-spec :family "Dank Mono" :weight 'normal :size 18)
      doom-big-font (font-spec :family "Dank Mono" :weight 'normal :size 24)
      {{- end}}
      {{- if eq .chezmoi.os "linux"}}
      doom-font (font-spec :family "Dank Mono" :weight 'normal :size 28)
      doom-big-font (font-spec :family "Dank Mono" :weight 'normal :size 34)
      {{- end}}

      ;; org
      org-directory "~/notes/"

      ;; line numbers
      display-line-numbers t
      display-line-numbers-type 'relative
      display-line-numbers-current-absolute t

      ;; indentation
      tab-width 2
      indent-tabs-mode nil

      ;; projectile
      make-backup-files nil
      projectile-project-search-path '("~/code/")
      projectile-enable-caching nil

      ;; ivy
      +ivy-project-search-engines '(ag rg)

      ;; enabled modes
      tmux-pane-mode t

      dired-dwim-target t

      line-spacing '0.25

      ;; Set text centered and wrapped
      visual-fill-column-width 120
      visual-fill-column-center-text t

      ;; make the fringe stand out from the background
      solarized-distinct-fringe-background t

      ;; Don't change the font for some headings and titles
      solarized-use-variable-pitch nil

      ;; make the modeline high contrast
      solarized-high-contrast-mode-line t

      ;; Use less bolding
      solarized-use-less-bold nil

      ;; Use more italics
      solarized-use-more-italic t

      ;; Use less colors for indicators such as git:gutter, flycheck and similar
      solarized-emphasize-indicators nil

      ;; Don't change size of org-mode headlines (but keep other size-changes)
      solarized-scale-org-headlines nil

      ;; Avoid all font-size changes
      solarized-height-minus-1 1.0
      solarized-height-plus-1 1.0
      solarized-height-plus-2 1.0
      solarized-height-plus-3 1.0
      solarized-height-plus-4 1.0)


;; Enable flashing mode-line on errors
(doom-themes-visual-bell-config)

;; Enable custom neotree theme
;;(doom-themes-neotree-config)

;; Corrects (and improves) org-mode's native fontification.
(doom-themes-org-config)

(after! org
  (map! :map org-mode-map
        :n "M-j" #'org-metadown
        :n "M-k" #'org-metaup)
  (setq org-todo-keywords '((sequence "TODO(t)" "PROJ(p!)" "|" "DONE(d!)")
                            (sequence "[ ](T)"  "[-](P)"  "[?](M@)" "|" "[X](D!)")
                            (sequence "NEXT(n)" "WAIT(w@/!)" "HOLD(h@/!)" "|" "ABRT(c@)"))
        ;; custom char for org bullets
        org-bullets-bullet-list '("⁖")
        ;; The column to which tags should be indented in a headline
        org-tags-column -80
        ;; Non-nil means undone TODO entries will block switching the parent to DONE
        org-enforce-todo-dependencies t
        ;; Non-nil means unchecked boxes will block switching the parent to DONE
        org-enforce-todo-checkbox-dependencies t
        ;; Information to record when a task moves to the DONE state.
        org-log-done 'time
        ;; Non-nil means insert state change notes and time stamps into a drawer
        org-log-into-drawer t))

(add-hook! '(go-mode-hook js2-mode-hook enh-ruby-mode-hook)
           #'(hs-minor-mode lsp-deferred yas-minor-mode))

(add-hook 'emacs-lisp-mode-hook #'hs-minor-mode)
(add-hook 'org-mode-hook #'yas-minor-mode)

(add-to-list 'hs-special-modes-alist
             '(ruby-mode "\\(def\\|do\\|class\\|begin\\|ensure\\|if\\|unless\\|{\\)"
                         "\\(end\\|end\\|end\\|end\\|end\\|end\\|end\\|}\\)"
                         "#"
                         (lambda (arg) (ruby-end-of-block))
                         nil))

(map! :leader
      :n "l d" #'lsp-find-definition
      :n "l R" #'lsp-find-references
      :n "l r" #'lsp-rename
      :n "l f" #'lsp-format-region
      :n "l F" #'lsp-format-buffer)
