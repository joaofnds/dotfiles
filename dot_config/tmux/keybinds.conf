unbind C-b

# Send prefix key when pressed twice
bind-key -r C-s send-prefix

# Reload config on <C-s, r>
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "tmux config reloaded"

# Quickly edit todo list
bind-key t split-window -h "emacs -nw ~/org/home.org"

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# fuzzy find sessions
bind C-j split-window -v "tmux list-sessions -F '#S' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse --select-1 | xargs tmux switch-client -t"
# old sessions command
# bind-key C-j choose-tree

# Restore clear screen keybind mapped over by tmux-navigator
bind C-l send-keys C-l

setw -g mode-keys vi

## panes
# smart pane switching with awareness of vim splits
is_vim_emacs='echo "#{pane_current_command}" | \
    grep -iqE "((^|\/)g?(view|n?vim?x?)(diff)?$)|emacs"'

# enable in root key table
bind -n C-h if-shell "$is_vim_emacs" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim_emacs" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim_emacs" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim_emacs" "send-keys C-l" "select-pane -R"
bind -n C-'\' if-shell "$is_vim_emacs" "send-keys 'C-\\'" "select-pane -l"

# enable in copy mode key table
bind -Tcopy-mode-vi C-h if-shell "$is_vim_emacs" "send-keys C-h" "select-pane -L"
bind -Tcopy-mode-vi C-j if-shell "$is_vim_emacs" "send-keys C-j" "select-pane -D"
bind -Tcopy-mode-vi C-k if-shell "$is_vim_emacs" "send-keys C-k" "select-pane -U"
bind -Tcopy-mode-vi C-l if-shell "$is_vim_emacs" "send-keys C-l" "select-pane -R"
bind -Tcopy-mode-vi C-'\' if-shell "$is_vim_emacs" "send-keys 'C-\\'" "select-pane -l"

### resize
bind-key -n S-left resize-pane -L 10
bind-key -n S-down resize-pane -D 5
bind-key -n S-up resize-pane -U 5
bind-key -n S-right resize-pane -R 10

bind-key -n C-left resize-pane -L 2
bind-key -n C-down resize-pane -D 1
bind-key -n C-up resize-pane -U 1
bind-key -n C-right resize-pane -R 2

### split
unbind '"'
unbind %
bind-key \" split-window -h -c '#{pane_current_path}'
bind-key \' split-window -v -c '#{pane_current_path}'

bind c new-window -c '#{pane_current_path}'

# Move focused pane to a new windows
# -d to maintain focus (start detached)
bind-key b break-pane -d

# Detach session
bind-key C-b send-keys 'tat && exit' 'C-m'

# Kill session
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

bind-key -n M-L send-keys C-l
